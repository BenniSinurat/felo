<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="OTPRegisterMemberBPFlow">
		<set-payload value="#[flowVars['originalPayload']]"
			doc:name="Set Payload" />
		<expression-component doc:name="Expression">
			<![CDATA[
				regMap = new java.util.HashMap();
				regMap['methodType']= 'GET';			
				regMap['name']= 'TokenAPIConfigMap';
				regMap['key']= 'tokenApi';
			payload = regMap;]]>
		</expression-component>
		<pooled-component>
			<spring-object bean="CacheProcessor" />
		</pooled-component>
		<set-variable variableName="tokenAPI" value="#[payload]"
			doc:name="Variable" />
		<choice doc:name="Choice">
			<when expression="#[flowVars['tokenAPI'] == null]">
				<flow-ref name="loginPartnerFlow" doc:name="Flow Reference" />
			</when>
			<otherwise>
				<logger level="INFO" message="Token API != null" doc:name="Logger" />
			</otherwise>
		</choice>
		<set-variable
			value="62#[org.apache.commons.lang.StringUtils.substring(originalPayload['msisdn'],1)]"
			variableName="newMsisdn" doc:name="Variable" />
		<set-variable
			value="/msisdn=#[flowVars['newMsisdn']]/token=#[flowVars['tokenAPI']]"
			variableName="requestAuthContent" doc:name="Variable" />
		<expression-transformer
			expression="#[originalPayload['requestAuthContent']=requestAuthContent;originalPayload]"
			doc:name="Expression" />
		<flow-ref name="generateHash" doc:name="Flow Reference" />
		<flow-ref name="otpRegisterMember" doc:name="Flow Reference" />
		<choice doc:name="Choice">
			<when expression="#[flowVars['status'] == 'SESSION_EXPIRED']">
				<processor-chain doc:name="Processor Chain">
					<flow-ref name="loginPartnerFlow" doc:name="Flow Reference" />
					<choice doc:name="Choice">
						<when expression="#[payload.status.message == 'PROCESSED'">
							<flow-ref name="otpRegisterMember" doc:name="Flow Reference" />
							<choice doc:name="Choice">
								<when expression="#[flowVars['status'] == 'PROCESSED']">
									<processor-chain doc:name="Processor Chain">
										<set-variable value="#[payload.RegisterRequestResponse[0].ticketID]"
											variableName="ticketID" doc:name="Variable" />
										<expression-component doc:name="Expression">
											<![CDATA[regMap = new java.util.HashMap();
												regMap['methodType']= 'PUT';			
												regMap['name']= 'RegisterTicketTokenMap';
												regMap['key']= flowVars['ticketID'];
												regMap['value']= originalPayload['msisdn'];
												payload = regMap;]]>
										</expression-component>
										<pooled-component>
											<spring-object bean="CacheProcessor" />
										</pooled-component>
										<expression-component doc:name="Expression">
											<![CDATA[
												responseMap = new java.util.HashMap();
												responseMap['msisdn'] = originalPayload['msisdn'];
												responseMap['ticketID'] = flowVars['ticketID'];
												responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
											payload = responseMap;]]>
										</expression-component>
										<logger level="INFO"
											message="[OTP REGISTER MEMBER SUCCESS #[originalPayload['msisdn']] : #[payload]]"
											doc:name="Logger" />
									</processor-chain>
								</when>
								<when expression="#[flowVars['status'] == 'MEMBER_ALREADY_REGISTERED']">
									<set-variable
										value="#[org.felo.api.process.Utils.getRandomNumberInRange(999999)]"
										variableName="otpnonpad" doc:name="Variable" />
									<set-variable
										value="#[org.apache.commons.lang.StringUtils.leftPad(otpnonpad,6,'0')]"
										variableName="otp" doc:name="Variable" />
									<set-variable
										value="#[org.felo.api.process.Utils.GenerateRandomNumber()]"
										variableName="ticketID" doc:name="Variable" />
									<logger level="INFO" message="MSISDN = #[originalPayload['msisdn']]"
										doc:name="Logger" />
									<expression-component doc:name="Expression">
										<![CDATA[cacheMap = new java.util.HashMap();
											cacheMap['otp']= flowVars['otp'];			
											cacheMap['msisdn']= originalPayload['msisdn'];
										payload = cacheMap;]]>
									</expression-component>
									<vm:outbound-endpoint exchange-pattern="one-way"
										connector-ref="Notification_VM" path="otp.register.notification"
										doc:name="VM" />
									<expression-component doc:name="Expression">
										<![CDATA[regMap = new java.util.HashMap();
											regMap['methodType']= 'PUT';			
											regMap['name']= 'RegisterTicketTokenMap';
											regMap['key']= flowVars['ticketID']+ ':' + flowVars['otp'];
											regMap['value']= payload;
										payload = regMap;]]>
									</expression-component>
									<pooled-component>
										<spring-object bean="CacheProcessor" />
									</pooled-component>
									<expression-component doc:name="Expression">
										<![CDATA[responseMap = new java.util.HashMap();
											responseMap['msisdn'] = originalPayload['msisdn'];
											responseMap['ticketID'] = flowVars['ticketID']+ ':' + flowVars['otp'];
											responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
										payload = responseMap;]]>
									</expression-component>
									<logger level="INFO"
										message="[OTP REGISTER MEMBER SUCCESS #[originalPayload['msisdn']] : #[payload]]"
										doc:name="Logger" />
								</when>
								<otherwise>
									<logger level="INFO"
										message="[LOGIN PARTNER FAILED #[originalPayload['msisdn']] : #[payload]]"
										doc:name="Logger" />
								</otherwise>
							</choice>
						</when>
						<otherwise>
							<logger level="INFO"
								message="[LOGIN PARTNER FAILED #[originalPayload['msisdn']] : #[payload]]"
								doc:name="Logger" />
						</otherwise>
					</choice>
				</processor-chain>
			</when>
			<when expression="#[flowVars['status'] == 'MEMBER_ALREADY_REGISTERED']">
				<set-variable
					value="#[org.felo.api.process.Utils.getRandomNumberInRange(999999)]"
					variableName="otpnonpad" doc:name="Variable" />
				<set-variable
					value="#[org.apache.commons.lang.StringUtils.leftPad(otpnonpad,6,'0')]"
					variableName="otp" doc:name="Variable" />
				<set-variable value="#[org.felo.api.process.Utils.GenerateRandomNumber()]"
					variableName="ticketID" doc:name="Variable" />
				<logger level="INFO" message="MSISDN = #[originalPayload['msisdn']]"
					doc:name="Logger" />
				<expression-component doc:name="Expression">
					<![CDATA[cacheMap = new java.util.HashMap();
						cacheMap['otp']= flowVars['otp'];			
						cacheMap['msisdn']= originalPayload['msisdn'];
					payload = cacheMap;]]>
				</expression-component>
				<vm:outbound-endpoint exchange-pattern="one-way"
					connector-ref="Notification_VM" path="otp.register.notification"
					doc:name="VM" />
				<expression-component doc:name="Expression">
					<![CDATA[regMap = new java.util.HashMap();
						regMap['methodType']= 'PUT';			
						regMap['name']= 'RegisterTicketTokenMap';
						regMap['key']= flowVars['ticketID']+ ':' + flowVars['otp'];
						regMap['value']= payload;
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="CacheProcessor" />
				</pooled-component>
				<expression-component doc:name="Expression">
					<![CDATA[responseMap = new java.util.HashMap();
						responseMap['msisdn'] = originalPayload['msisdn'];
						responseMap['ticketID'] = flowVars['ticketID']+ ':' + flowVars['otp'];
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
					payload = responseMap;]]>
				</expression-component>
				<logger level="INFO"
					message="[OTP REGISTER MEMBER SUCCESS #[originalPayload['msisdn']] : #[payload]]"
					doc:name="Logger" />
			</when>
			<when expression="#[flowVars['status'] == 'PROCESSED']">
				<set-variable value="#[payload.RegisterRequestResponse[0].ticketID]"
					variableName="ticketID" doc:name="Variable" />

				<logger level="INFO" message="MSISDN = #[originalPayload['msisdn']]"
					doc:name="Logger" />
				<expression-component doc:name="Expression">
					<![CDATA[regMap = new java.util.HashMap();
						regMap['methodType']= 'PUT';			
						regMap['name']= 'RegisterTicketTokenMap';
						regMap['key']= flowVars['ticketID'];
						regMap['value']= originalPayload['msisdn'];
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="CacheProcessor" />
				</pooled-component>
				<expression-component doc:name="Expression">
					<![CDATA[responseMap = new java.util.HashMap();
						responseMap['msisdn'] = originalPayload['msisdn'];
						responseMap['ticketID'] = flowVars['ticketID'];
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
					payload = responseMap;]]>
				</expression-component>
				<logger level="INFO"
					message="[OTP REGISTER MEMBER SUCCESS #[originalPayload['msisdn']] : #[payload]]"
					doc:name="Logger" />
			</when>
			<otherwise>
				<processor-chain doc:name="Processor Chain">
					<logger level="INFO"
						message="[OTP REGISTER MEMBER FAILED #[originalPayload['msisdn']] : #[payload]]"
						doc:name="Logger" />
				</processor-chain>
			</otherwise>
		</choice>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>
	<sub-flow name="otpRegisterMember">
		<expression-component doc:name="Expression">
			<![CDATA[responseMap = new java.util.HashMap();
				responseMap['msisdn'] = flowVars['newMsisdn'];
				responseMap['token'] = flowVars['tokenAPI'];		
			payload = responseMap;]]>
		</expression-component>
		<http:request config-ref="HTTP_Request_Configuration"
			path="Member/RegisterRequest" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="Content-Type"
					value="application/x-www-form-urlencoded" />
				<http:header headerName="APIKey" value="${api.key}" />
				<http:header headerName="requestAuth"
					value="#[originalPayload['requestAuth']]" />
				<http:query-param paramName="msisdn"
					value="#[flowVars['newMsisdn']]" />
				<http:query-param paramName="token"
					value="#[originalPayload['tokenAPI']]" />
			</http:request-builder>
			<http:success-status-code-validator
				values="200,400,401,403,404,440,444,498,500,503,504,505,598,599" />
		</http:request>
		<json:json-to-object-transformer
			returnClass="java.lang.Object" doc:name="JSON to Object" />
		<logger level="INFO" message="OTP Register Emoney = #[payload]"
			doc:name="Logger" />
		<set-variable value="#[payload.status.message]"
			variableName="status" doc:name="Variable" />
	</sub-flow>

</mule>
