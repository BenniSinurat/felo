<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="loginMemberBPFlow">
		<set-payload value="#[flowVars['originalPayload']]"
			doc:name="Set Payload" />
		<set-variable variableName="action" value="DECRYPT"
			doc:name="Variable" />
		<set-variable variableName="password"
			value="#[originalPayload['password']]" doc:name="Variable" />
		<pooled-component>
			<spring-object bean="LoginCredentialHandler" />
		</pooled-component>
		<set-variable variableName="cred" value="#[payload]"
			doc:name="Variable" />
		<logger level="INFO" message="CREDENTIAL = #[flowVars['cred']]" />
		<set-variable
			value="#[org.felo.api.process.Utils.getMD5Hash(flowVars['cred'])]"
			variableName="cred2" doc:name="Variable" />
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query>
				<![CDATA[SELECT a.password, m.uid, m.name, m.email, m.profile_picture FROM members m 
						INNER JOIN accounts a ON a.member_id=m.id 
							WHERE m.msisdn=#[originalPayload['msisdn']]]]>
			</db:parameterized-query>
		</db:select>
		<message-filter onUnaccepted="dataNotFoundFlow"
			doc:name="Message">
			<expression-filter expression="#[payload != []]" />
		</message-filter>
		<set-variable value="#[payload.get(0)['password']]"
			variableName="pass" doc:name="Variable" />
		<set-variable value="#[payload.get(0)['uid']]"
			variableName="uid" doc:name="Variable" />
		<set-variable value="#[payload.get(0)['name']]"
			variableName="name" doc:name="Variable" />
		<set-variable value="#[payload.get(0)['email']]"
			variableName="email" doc:name="Variable" />
		<set-variable variableName="filePic"
			value="#[payload.get(0)['profile_picture']]" doc:name="Variable" />

		<choice>
			<when expression="flowVars['uid'] == originalPayload['uid']">
				<logger level="INFO"
					message="PASSWORD #[flowVars['cred2']] == #[flowVars['pass']]"
					doc:name="Logger" />
			</when>
			<otherwise>
				<db:update config-ref="MySQL_Configuration" doc:name="Database">
					<db:parameterized-query>
						<![CDATA[UPDATE felo.members SET uid=#[originalPayload['uid']]
									WHERE msisdn=#[originalPayload['msisdn']]]]>
					</db:parameterized-query>
				</db:update>
				<expression-component doc:name="Expression">
					<![CDATA[cacheMap = new java.util.HashMap();
						cacheMap['name'] = flowVars['name'];
						cacheMap['email'] = flowVars['email'];
					payload = cacheMap;]]>
				</expression-component>
				<vm:outbound-endpoint exchange-pattern="one-way"
					connector-ref="Notification_VM" path="login.notification" doc:name="VM" />
			</otherwise>
		</choice>

		<choice doc:name="Choice">
			<when expression="flowVars['cred2'] == flowVars['pass']">
				<set-variable
					value="#[org.felo.api.auth.JWTProcessor.createJWTHMAC256(originalPayload['msisdn'],originalPayload['uid'])]"
					variableName="token" doc:name="Variable" />

				<expression-component doc:name="Expression">
					<![CDATA[
						regMap = new java.util.HashMap();
						regMap['methodType']='PUT';			
						regMap['name']='LoginTokenMap';
						regMap['key']=originalPayload['msisdn'];
						regMap['value']=flowVars['token'];
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="CacheProcessor" />
				</pooled-component>
				<expression-component doc:name="Expression">
					<![CDATA[responseMap=new java.util.HashMap();
						responseMap['msisdn']=originalPayload['msisdn'];
						responseMap['name']=flowVars['name'];
						responseMap['profilePicture']=flowVars['filePic'];
						responseMap['token']=flowVars['token'];
						responseMap['status']=org.felo.api.data.StatusBuilder.getStatus('PROCESSED');	
					payload = responseMap;]]>
				</expression-component>
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[
						responseMap=new java.util.HashMap();
						responseMap['status']=org.felo.api.data.StatusBuilder.getStatus('INVALID');	
					payload = responseMap;]]>
				</expression-component>
			</otherwise>
		</choice>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>
</mule>
