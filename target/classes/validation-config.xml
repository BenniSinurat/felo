<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<sub-flow name="loginPartnerFlow">
		<expression-component doc:name="Expression">
			<![CDATA[
				regMap = new java.util.HashMap();
				regMap['methodType']= 'GET';			
				regMap['name']= 'TokenAPIConfigMap';
				regMap['key']= 'tokenApi';
			payload = regMap;]]>
		</expression-component>
		<pooled-component>
			<spring-object bean="CacheProcessor" />
		</pooled-component>
		<set-variable value="#[payload]" variableName="tokenAPI"
			doc:name="Variable" />

		<choice doc:name="Choice">
			<when expression="#[payload == null]">
				<logger level="INFO" message="TOKEN API = #[payload]"
					doc:name="Logger" />
			</when>
			<otherwise>
				<processor-chain doc:name="Processor Chain">
					<logger level="INFO" message="TOKEN API = #[payload]"
						doc:name="Logger" />
					<expression-component doc:name="Expression">
						<![CDATA[
							regMap = new java.util.HashMap();
							regMap['methodType']= 'DELETE';			
							regMap['name']= 'TokenAPIConfigMap';
							regMap['key']= 'tokenApi';
						payload = regMap;]]>
					</expression-component>
					<pooled-component>
						<spring-object bean="CacheProcessor" />
					</pooled-component>
				</processor-chain>
			</otherwise>
		</choice>
		<http:request config-ref="HTTP_Request_Configuration"
			path="Session/Login" method="GET" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="Content-Type"
					value="application/x-www-form-urlencoded" />
				<http:header headerName="APIKey" value="${api.key}" />
				<http:header headerName="Authorization" value="Basic MTExMjAwNDoxMjM0NTY=" />
			</http:request-builder>
			<http:success-status-code-validator
				values="200,401,403,400,440,444,500" />
		</http:request>
		<json:json-to-object-transformer
			returnClass="java.lang.Object" doc:name="JSON to Object" />

		<choice doc:name="Choice">
			<when expression="#[payload.status.message == 'PROCESSED']">
				<processor-chain doc:name="Processor Chain">
					<set-variable variableName="tokenAPI"
						value="#[payload.LoginResponse[0].token]" doc:name="Variable" />
					<expression-component doc:name="Expression">
									<![CDATA[
										regMap = new java.util.HashMap();
										regMap['methodType']= 'PUT';			
										regMap['name']= 'TokenAPIConfigMap';
										regMap['key']= 'tokenApi';
										regMap['value']= flowVars['tokenAPI'];
									payload = regMap;]]>
					</expression-component>
					<pooled-component>
						<spring-object bean="CacheProcessor" />
					</pooled-component>

					<expression-transformer
						expression="#[originalPayload['tokenAPI']=tokenAPI;originalPayload]"
						doc:name="Expression" />
					<flow-ref name="generateHash" doc:name="Flow Reference" />
					<expression-component doc:name="Expression">
									<![CDATA[
										responseMap = new java.util.HashMap();
										responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
									payload = responseMap;]]>
					</expression-component>
				</processor-chain>
			</when>
			<otherwise>
				<processor-chain doc:name="Processor Chain">
					<logger level="INFO" message="Status = #[payload]" doc:name="Logger" />
				</processor-chain>
			</otherwise>
		</choice>
	</sub-flow>

	<sub-flow name="tokenValidationFlow">
		<set-variable
			value="#[org.felo.api.auth.JWTProcessor.decodeJWTHMAC256(originalPayload['token'])]"
			variableName="msisdn" doc:name="Variable" />
		<logger level="INFO" message="GET MSISDN = #[flowVars['msisdn']]"
			doc:name="Logger" />
		<expression-transformer
			expression="#[originalPayload['msisdn']=msisdn;originalPayload]"
			doc:name="Expression" />
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query>
				<![CDATA[SELECT uid FROM members WHERE msisdn=#[originalPayload['msisdn']]]]>
			</db:parameterized-query>
		</db:select>
		<message-filter onUnaccepted="dataNotFoundFlow"
			doc:name="Message">
			<expression-filter expression="#[payload != []]" />
		</message-filter>
		<set-variable value="#[payload.get(0)['uid']]"
			variableName="uid" doc:name="Variable" />
		<set-variable
			value="#[org.felo.api.auth.JWTProcessor.verifyJWTHMAC256(originalPayload['token'],flowVars['uid'])]"
			variableName="verifyToken" doc:name="Variable" />
		<logger level="INFO" message="VERIFY TOKEN = #[payload]"
			doc:name="Logger" />
		<choice doc:name="Choice">
			<when expression="#[payload == 'false']">
				<set-payload value="access_violation" doc:name="Set Payload" />
				<expression-component doc:name="Expression">
					<![CDATA[
						responseMap = new java.util.HashMap();
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('ACCESS_VIOLATION');			
					payload = responseMap;]]>
				</expression-component>
			</when>
			<otherwise>
				<set-payload value="success" doc:name="Set Payload" />
				<expression-component doc:name="Expression">
					<![CDATA[
						responseMap = new java.util.HashMap();
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('SUCCESS');			
					payload = responseMap;]]>
				</expression-component>
			</otherwise>
		</choice>
		<json:json-to-object-transformer
			returnClass="java.lang.Object" doc:name="JSON to Object" />
	</sub-flow>

	<sub-flow name="generateHash">
		<set-variable variableName="requestAuthContent"
			value="#[originalPayload['requestAuthContent']]" doc:name="Variable" />
		<pooled-component>
			<spring-object bean="HashValidation" />
		</pooled-component>
		<set-variable value="#[payload]" variableName="requestAuth"
			doc:name="Variable" />
		<expression-transformer
			expression="#[originalPayload['requestAuth']=requestAuth;originalPayload]"
			doc:name="Expression" />
		<logger level="INFO"
			message="[GENERATE : HASH (#[originalPayload['msisdn']]) / REQUEST AUTH CONTENT (#[originalPayload['requestAuthContent']]) ]"
			doc:name="Logger" />
	</sub-flow>

	<sub-flow name="transactionLoginPartnerFlow">
		<set-variable variableName="action" value="DECRYPT"
			doc:name="Variable" />
		<set-variable variableName="password"
			value="#[originalPayload['credential']]" doc:name="Variable" />
		<pooled-component>
			<spring-object bean="LoginCredentialHandler" />
		</pooled-component>
		<set-variable variableName="cred" value="#[payload]"
			doc:name="Variable" />
		<logger level="INFO" message="CREDENTIAL = #[flowVars['cred']]" />
		<set-variable
			value="#[org.felo.api.process.Utils.getMD5Hash(flowVars['cred'])]"
			variableName="cred2" doc:name="Variable" />
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query>
            	<![CDATA[SELECT credential FROM communities  
            				WHERE username=#[originalPayload['account']]]]>
			</db:parameterized-query>
		</db:select>
		<message-filter onUnaccepted="dataNotFoundFlow"
			doc:name="Message">
			<expression-filter expression="#[payload != []]" />
		</message-filter>
		<set-variable value="#[payload.get(0)['credential']]"
			variableName="pass" doc:name="Variable" />

		<choice>
			<when expression="flowVars['cred2'] == flowVars['pass']">
				<set-variable
					value="Basic #[originalPayload['account']]:#[flowVars['cred']]"
					variableName="autoriz" />
				<set-variable
					value="#[new String(org.mule.util.Base64.encode(flowVars.autoriz),java.nio.charset.Charset.forName('UTF-8'));]"
					variableName="autorization" />
				<expression-component doc:name="Expression">
					<![CDATA[regMap = new java.util.HashMap();
						regMap['methodType']='GET';			
						regMap['name']='TokenAPIConfigMap';
						regMap['key']=originalPayload['account'];
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="CacheProcessor" />
				</pooled-component>
				<set-variable value="#[payload]" variableName="tokenAPI"
					doc:name="Variable" />

				<choice doc:name="Choice">
					<when expression="#[payload == null]">
						<logger level="INFO" message="TOKEN API = #[payload]"
							doc:name="Logger" />
					</when>
					<otherwise>
						<processor-chain doc:name="Processor Chain">
							<logger level="INFO" message="TOKEN API = #[payload]"
								doc:name="Logger" />
							<expression-component doc:name="Expression">
								<![CDATA[
									regMap = new java.util.HashMap();
									regMap['methodType']='DELETE';			
									regMap['name']='TokenAPIConfigMap';
									regMap['key']=originalPayload['account'];
								payload = regMap;]]>
							</expression-component>
							<pooled-component>
								<spring-object bean="CacheProcessor" />
							</pooled-component>
						</processor-chain>
					</otherwise>
				</choice>
				<http:request config-ref="HTTP_Request_Configuration"
					path="Session/Login" method="GET" doc:name="HTTP">
					<http:request-builder>
						<http:header headerName="Content-Type"
							value="application/x-www-form-urlencoded" />
						<http:header headerName="APIKey" value="${api.key}" />
						<http:header headerName="Authorization" value="#[flowVars['autorization']]" />
					</http:request-builder>
					<http:success-status-code-validator
						values="200,401,403,400,440,444,500" />
				</http:request>
				<json:json-to-object-transformer
					returnClass="java.lang.Object" doc:name="JSON to Object" />

				<choice doc:name="Choice">
					<when expression="#[payload.status.message == 'PROCESSED']">
						<processor-chain doc:name="Processor Chain">
							<set-variable variableName="tokenAPI"
								value="#[payload.LoginResponse[0].token]" doc:name="Variable" />
							<expression-component doc:name="Expression">
								<![CDATA[regMap = new java.util.HashMap();
									regMap['methodType']='PUT';			
									regMap['name']='TokenAPIConfigMap';
									regMap['key']=originalPayload['account'];
									regMap['value']=flowVars['tokenAPI'];
								payload = regMap;]]>
							</expression-component>
							<pooled-component>
								<spring-object bean="CacheProcessor" />
							</pooled-component>

							<expression-transformer
								expression="#[originalPayload['tokenAPI']=tokenAPI;originalPayload]"
								doc:name="Expression" />
							<flow-ref name="generateHash" doc:name="Flow Reference" />
							<expression-component doc:name="Expression">
								<![CDATA[responseMap = new java.util.HashMap();
									responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
								payload = responseMap;]]>
							</expression-component>
						</processor-chain>
					</when>
					<otherwise>
						<processor-chain doc:name="Processor Chain">
							<logger level="INFO" message="Status = #[payload]"
								doc:name="Logger" />
						</processor-chain>
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[responseMap=new java.util.HashMap();
						responseMap['status']=org.felo.api.data.StatusBuilder.getStatus('INVALID');	
					payload = responseMap;]]>
				</expression-component>
			</otherwise>
		</choice>
	</sub-flow>
</mule>
