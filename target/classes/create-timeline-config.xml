<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="addTimelineBPFlow">
		<set-payload value="#[flowVars['originalPayload']]"
			doc:name="Set Payload" />
		<db:insert config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query>
				<![CDATA[INSERT INTO timelines(member_id,community_id,description,location) 
					VALUES((SELECT m.id from felo.members m INNER JOIN felo.member_community mc ON mc.member_id=m.id 
						WHERE mc.community_id=#[originalPayload['communityID']] 
						AND m.msisdn=#[originalPayload['msisdn']]),#[originalPayload['communityID']],
						#[originalPayload['description']],#[originalPayload['location']])]]>
			</db:parameterized-query>
		</db:insert>
		<message-filter onUnaccepted="dbFailedFlow" doc:name="Message">
			<expression-filter expression="#[payload == 1]" />
		</message-filter>

		<choice>
			<when expression="#[originalPayload['file'] == null]">
				<logger level="INFO" message="PAYLOAD DB = #[payload]"
					doc:name="Logger" />
			</when>
			<otherwise>
				<db:select config-ref="MySQL_Configuration" doc:name="Database">
					<db:parameterized-query>
		            	<![CDATA[SELECT id FROM timelines WHERE community_id=#[originalPayload['communityID']] 
		            			AND description=#[originalPayload['description']]
		            			AND location=#[originalPayload['location']]]]>
		            </db:parameterized-query>
				</db:select>
				<logger level="INFO" message="PAYLOAD DB = #[payload]"
					doc:name="Logger" />
				<message-filter onUnaccepted="dataNotFoundFlow"
					doc:name="Message">
					<expression-filter expression="#[payload != []]" />
				</message-filter>
				<set-variable variableName="id" value="#[payload.get(0)['id']]"
					doc:name="Variable" />
				<set-variable value="#[flowVars['id']]-timeline-1"
					variableName="timPic" doc:name="Variable" />
				<set-variable value="#[flowVars['id']]-timeline-2"
					variableName="timPic2" doc:name="Variable" />
				<set-variable
					value="${url.file}timeline/#[flowVars['timPic']].#[originalPayload.file['fileExtension']]"
					variableName="urlTimPic" doc:name="Variable" />
				<db:update config-ref="MySQL_Configuration" doc:name="Database">
					<db:parameterized-query>
		            	<![CDATA[UPDATE timelines SET file=#[flowVars['urlTimPic']]
		            			WHERE id=#[flowVars['id']]]]>
					</db:parameterized-query>
				</db:update>
				<message-filter onUnaccepted="dbFailedFlow" doc:name="Message">
					<expression-filter expression="#[payload == 1]" />
				</message-filter>
				<expression-component doc:name="Expression">
					<![CDATA[regMap=new java.util.HashMap();
						regMap['path']='timeline';
						regMap['content']=originalPayload.file['content'];
						regMap['fileExtension']=originalPayload.file['fileExtension'];
						regMap['fileName']=flowVars['timPic'];
					payload = regMap;]]>
				</expression-component>
				<vm:outbound-endpoint exchange-pattern="one-way"
					connector-ref="File_VM" path="save.file" doc:name="VM" />
			</otherwise>
		</choice>

		<expression-component doc:name="Expression">
			<![CDATA[responseMap=new java.util.HashMap();
				responseMap['msisdn']=originalPayload['msisdn'];
				responseMap['communityID']=originalPayload['communityID'];
				responseMap['location']=originalPayload['location'];
				responseMap['description']=originalPayload['description'];
				responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
			payload = responseMap;]]>
		</expression-component>
		<logger level="INFO"
			message="[ADD TIMELINE SUCCESS #[originalPayload['msisdn']] : #[payload]]"
			doc:name="Logger" />
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>
</mule>
