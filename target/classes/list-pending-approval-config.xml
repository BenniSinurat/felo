<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="pendingApprovalCommunityListBPFlow">
		<set-payload value="#[flowVars['originalPayload']]"
			doc:name="Set Payload" />
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query>
            	<![CDATA[SELECT admin from felo.member_community
		                    WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']])
		                            AND community_id=#[originalPayload['communityID']]]]>
			</db:parameterized-query>
		</db:select>
		<message-filter onUnaccepted="dbFailedFlow" doc:name="Message">
			<expression-filter expression="#[payload != []]" />
		</message-filter>
		<set-variable value="#[payload.get(0)['admin']]"
			variableName="isAdmin" doc:name="Variable" />
		<choice>
			<when expression="#[flowVars['isAdmin'] == 1]">
				<db:select config-ref="MySQL_Configuration" doc:name="Database">
					<db:parameterized-query>
            	<![CDATA[SELECT m.msisdn, m.name, c.name as communityName, mc.community_id as communityID, c.profile_picture FROM felo.member_community mc 
	            	INNER JOIN felo.members m ON mc.member_id=m.id 
	            	INNER JOIN felo.communities c ON mc.community_id=c.id 
	            		WHERE mc.community_id=#[originalPayload['communityID']] AND mc.approved=b'1' AND mc.invited_by IS NULL]]>
			</db:parameterized-query>
				</db:select>
				<logger level="INFO" message="PAYLOAD DB = #[payload]"
					doc:name="Logger" />
				<message-filter onUnaccepted="dataNotFoundFlow"
					doc:name="Message">
					<expression-filter expression="#[payload != []]" />
				</message-filter>

				<set-variable variableName="trxMaps"
					value="#[new java.util.ArrayList()]" doc:name="Variable" />

				<foreach collection="#[payload]" doc:name="For Each">
					<set-variable variableName="trxPayload"
						value="#[new java.util.HashMap()]" doc:name="Variable" />
					<set-variable variableName="name" value="#[payload.'name']"
						doc:name="Variable" />
					<set-variable variableName="communityID" value="#[payload.'communityID']"
						doc:name="Variable" />
					<set-variable variableName="communityName"
						value="#[payload.'communityName']" doc:name="Variable" />
					<set-variable variableName="msisdn" value="#[payload.'msisdn']"
						doc:name="Variable" />
					<set-variable variableName="profPic"
						value="#[payload.'profile_picture']" doc:name="Variable" />

					<set-variable value="#[flowVars['profPic']]"
						variableName="path" doc:name="Variable" />
					<choice>
						<when expression="#[flowVars['path'] == null]">
							<logger level="INFO" message="PROFILE PICTURE =#[flowVars['profPic']]" />
						</when>
						<otherwise>
							<flow-ref name="inputFile" doc:name="Flow Reference" />
							<set-variable value="#[payload]" variableName="profPic"
								doc:name="Variable" />
						</otherwise>
					</choice>

					<expression-transformer
						expression="#[trxPayload['name']=flowVars.name;trxPayload]"
						doc:name="Expression" />

					<expression-transformer
						expression="#[trxPayload['communityID']=flowVars.communityID;trxPayload]"
						doc:name="Expression" />

					<expression-transformer
						expression="#[trxPayload['communityName']=flowVars.communityName;trxPayload]"
						doc:name="Expression" />

					<expression-transformer
						expression="#[trxPayload['msisdn']=flowVars.msisdn;trxPayload]"
						doc:name="Expression" />

					<expression-transformer
						expression="#[trxPayload['profilePicture']=flowVars.profPic;trxPayload]"
						doc:name="Expression" />

					<expression-component doc:name="Expression">
				<![CDATA[trxMaps.add(trxPayload);]]>
					</expression-component>

				</foreach>
				<expression-component doc:name="Expression">
					<![CDATA[responseMap=new java.util.HashMap();
						responseMap['msisdn']=originalPayload['msisdn'];
						responseMap['pendingApproval']=flowVars['trxMaps'];
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
					payload = responseMap;]]>
				</expression-component>
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[responseMap=new java.util.HashMap();
						responseMap['msisdn']=originalPayload['msisdn'];
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('UNAUTHORIZED_ACCESS');			
					payload = responseMap;]]>
				</expression-component>
				<logger level="INFO"
					message="[LIST PENDING APPROVAL FAILED #[originalPayload['msisdn']] : #[payload]]"
					doc:name="Logger" />
			</otherwise>
		</choice>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>
</mule>
