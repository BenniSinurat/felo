<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="ImageFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Test" allowedMethods="GET,POST" doc:name="HTTP">
		</http:listener>
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>

		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />

		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />

		<custom-transformer class="org.felo.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable variableName="originalPayload" value="#[payload]"
			doc:name="Variable" />

		<choice doc:name="Choice">
			<when expression="#[flowVars['method'] == 'GET']">
				<logger level="INFO"
					message="[{#[correlationID]} :IMAGE-TEST Request = #[originalPayload]]"
					doc:name="Logger" />
				<set-payload
					value="#[&quot;SELECT id, name, profile_picture, background_picture FROM felo.image_test
		            		WHERE name LIKE '%&quot; + originalPayload.name + &quot;%'&quot;]" />
				<db:select config-ref="MySQL_Configuration" doc:name="Database">
					<db:dynamic-query><![CDATA[#[payload]]]></db:dynamic-query>
				</db:select>
				<logger level="INFO" message="PAYLOAD DB = #[payload]"
					doc:name="Logger" />
				<message-filter onUnaccepted="dataNotFoundFlow"
					doc:name="Message">
					<expression-filter expression="#[payload != []]" />
				</message-filter>
				<set-variable variableName="name" value="#[payload.get(0)['name']]" />
				<set-variable variableName="id"
					value="#[new String(payload.get(0)['id'])]" doc:name="Variable" />
				<set-variable variableName="profPic"
					value="#[payload.get(0)['profile_picture']]" doc:name="Variable" />
				<set-variable variableName="backPic"
					value="#[payload.get(0)['background_picture']]" doc:name="Variable" />
					
				<!-- <set-variable variableName="profPicture"
					value="#[org.felo.api.process.ImageConverter.decodeBytes(flowVars['profPic'])]" /> -->

				<expression-component doc:name="Expression">
					<![CDATA[responseMap=new java.util.HashMap();
						responseMap['profilePicture']=flowVars['profPic'];
						responseMap['backgroundPicture']=flowVars['backPic'];
						responseMap['name']=flowVars['name'];
						responseMap['id']=flowVars['id'];
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
					payload = responseMap;]]>
				</expression-component>
			</when>
			<otherwise>
				<logger level="INFO"
					message="[{#[correlationID]} : IMAGE-TEST Request = #[originalPayload]]"
					doc:name="Logger" />
				<!-- <set-variable variableName="profPic"
					value="#[org.felo.api.process.ImageConverter.extractBytes(originalPayload['profilePicture'])]" /> -->

				<db:insert config-ref="MySQL_Configuration" doc:name="Database">
					<db:parameterized-query>
			            <![CDATA[INSERT INTO felo.image_test (name,profile_picture, background_picture) 
							SELECT * FROM (SELECT #[originalPayload['name']],#[originalPayload['profilePicture']],#[originalPayload['backgroundPicture']]) as tmp
							WHERE NOT EXISTS (
								SELECT name FROM felo.image_test
									WHERE name=#[originalPayload['name']]
							)]]>
			        </db:parameterized-query>
				</db:insert>
				<message-filter onUnaccepted="dbFailedFlow" doc:name="Message">
					<expression-filter expression="#[payload == 1]" />
				</message-filter>
				<expression-component doc:name="Expression">
					<![CDATA[responseMap=new java.util.HashMap();
						responseMap['name']=originalPayload['name'];
						responseMap['profilePicture']=originalPayload['profilePicture'];
						responseMap['backgroundPicture']=originalPayload['backgroundPicture'];
						responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
					payload = responseMap;]]>
				</expression-component>
			</otherwise>
		</choice>

		<json:object-to-json-transformer />
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>
</mule>
