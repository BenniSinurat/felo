<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="joinCommunityBPFlow">
		<set-payload value="#[flowVars['originalPayload']]"
			doc:name="Set Payload" />

		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query>
	           <![CDATA[SELECT private FROM felo.communities
					WHERE id=#[originalPayload['communityID']]]]>
			</db:parameterized-query>
		</db:select>
		<logger level="INFO" message="PAYLOAD DB = #[payload]"
			doc:name="Logger" />
		<message-filter onUnaccepted="dataNotFoundFlow"
			doc:name="Message">
			<expression-filter expression="#[payload != []]" />
		</message-filter>
		<choice>
			<when expression="#[payload.get(0)['private'] == 1]">
				<db:insert config-ref="MySQL_Configuration" doc:name="Database">
					<db:parameterized-query>
						<![CDATA[INSERT INTO felo.member_community(member_id,community_id,approved,approval_date) 
							SELECT * FROM (SELECT (SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) as memberID,#[originalPayload['communityID']],b'1',null) as tmp
				            WHERE NOT EXISTS (
								SELECT member_id, community_id from felo.member_community 
									WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND community_id=#[originalPayload['communityID']]
							)]]>
					</db:parameterized-query>
				</db:insert>
			</when>
			<otherwise>
				<db:insert config-ref="MySQL_Configuration" doc:name="Database">
					<db:parameterized-query>
						<![CDATA[INSERT INTO felo.member_community(member_id,community_id,approved) 
							SELECT * FROM (SELECT (SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) as memberID,#[originalPayload['communityID']],b'0') as tmp
				            WHERE NOT EXISTS (
								SELECT member_id, community_id from felo.member_community 
									WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND community_id=#[originalPayload['communityID']]
							)]]>
					</db:parameterized-query>
				</db:insert>
			</otherwise>
		</choice>
		<message-filter onUnaccepted="dbFailedFlow" doc:name="Message">
			<expression-filter expression="#[payload == 1]" />
		</message-filter>
		<expression-component doc:name="Expression">
			<![CDATA[responseMap=new java.util.HashMap();
				responseMap['msisdn'] = originalPayload['msisdn'];
				responseMap['status'] = org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
			payload = responseMap;]]>
		</expression-component>
		<logger level="INFO"
			message="[JOIN COMMUNITY SUCCESS #[originalPayload['msisdn']] : #[payload]]"
			doc:name="Logger" />
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>
</mule>
