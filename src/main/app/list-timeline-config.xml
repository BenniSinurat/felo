<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="timelineListBPFlow">
		<set-payload value="#[flowVars['originalPayload']]"
			doc:name="Set Payload" />

		<choice>
			<when expression="#[originalPayload['communityID'] == null]">
				<processor-chain>
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query>
			            	<![CDATA[SELECT GROUP_CONCAT(community_id SEPARATOR ',') as community_id
										FROM felo.member_community
											WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND approved='0']]>
						</db:parameterized-query>
					</db:select>
					<logger level="INFO"
						message="PAYLOAD DB = #[payload.get(0)['community_id']]" doc:name="Logger" />
					<message-filter onUnaccepted="dataNotFoundFlow"
						doc:name="Message">
						<expression-filter expression="#[payload != []]" />
					</message-filter>
					<set-variable value="#[payload.get(0)['community_id']]"
						variableName="listCommunityID" />
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query>
			            	<![CDATA[SELECT id, (SELECT EXISTS (SELECT 1/0 FROM felo.member_community 
										WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) 
									    AND community_id IN (#[flowVars['listCommunityID']]) AND admin='1')) as isAdmin 
										FROM felo.timelines 
											WHERE community_id IN (#[flowVars['listCommunityID']])]]>
						</db:parameterized-query>
					</db:select>
				</processor-chain>
			</when>
			<otherwise>
				<processor-chain>
					<set-variable value="#[originalPayload['communityID']]"
						variableName="communityID" />
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query>
						   <![CDATA[SELECT id, (SELECT EXISTS (SELECT 1/0 FROM felo.member_community 
						   	WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) 
						   		AND community_id=#[flowVars['communityID']] AND admin='1')) as isAdmin 
						   	FROM felo.timelines WHERE community_id=#[flowVars['communityID']]]]>
						</db:parameterized-query>
					</db:select>
				</processor-chain>
			</otherwise>
		</choice>

		<logger level="INFO" message="PAYLOAD DB = #[payload]"
			doc:name="Logger" />
		<message-filter onUnaccepted="dataNotFoundFlow"
			doc:name="Message">
			<expression-filter expression="#[payload != []]" />
		</message-filter>

		<set-variable variableName="trxMaps" value="#[new java.util.ArrayList()]"
			doc:name="Variable" />

		<foreach collection="#[payload]" doc:name="For Each">
			<set-variable variableName="trxPayload" value="#[new java.util.HashMap()]"
				doc:name="Variable" />

			<set-variable variableName="id" value="#[payload.'id']"
				doc:name="Variable" />
			<set-variable variableName="isAdmin" value="#[payload.'isAdmin']"
				doc:name="Variable" />

			<db:select config-ref="MySQL_Configuration" doc:name="Database">
				<db:parameterized-query>
					   <![CDATA[SELECT t.id,t.community_id as communityID,c.name as communityName,t.description,t.file, t.created_date, c.profile_picture, t.location,
	            			(SELECT COUNT(*) FROM felo.comments WHERE timeline_id=#[flowVars['id']]) as comments,
				            (SELECT COUNT(*) FROM felo.likes WHERE timeline_id=#[flowVars['id']]) as likes,
				            (SELECT EXISTS (SELECT 1/0 FROM felo.likes WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND timeline_id=#[flowVars['id']])) as isLike,
				           	(SELECT EXISTS (SELECT 1/0 FROM felo.comments WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND timeline_id=#[flowVars['id']])) as isComment,
				           	(SELECT EXISTS (SELECT 1/0 FROM felo.timelines WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND id=#[flowVars['id']])) as isMe
	            		FROM felo.timelines t 
	            			INNER JOIN felo.communities c ON  t.community_id=c.id 
	            			INNER JOIN felo.members m ON t.member_id=m.id 
	            		WHERE t.id=#[flowVars['id']]]]>
				</db:parameterized-query>
			</db:select>

			<logger level="INFO" message="PAYLOAD DB III = #[payload]"
				doc:name="Logger" />
			<message-filter onUnaccepted="dataNotFoundFlow"
				doc:name="Message">
				<expression-filter expression="#[payload != []]" />
			</message-filter>
			<set-variable variableName="createdDate"
				value="#[org.felo.api.process.Utils.formatDate(payload.get(0)['created_date'])]"
				doc:name="Variable" />
			<set-variable variableName="communityID"
				value="#[payload.get(0)['communityID']]" doc:name="Variable" />
			<set-variable variableName="communityName"
				value="#[payload.get(0)['communityName']]" doc:name="Variable" />
			<set-variable variableName="description"
				value="#[payload.get(0)['description']]" doc:name="Variable" />
			<set-variable variableName="location"
				value="#[payload.get(0)['location']]" doc:name="Variable" />
			<set-variable variableName="filePic" value="#[payload.get(0)['file']]"
				doc:name="Variable" />
			<set-variable variableName="profPic"
				value="#[payload.get(0)['profile_picture']]" doc:name="Variable" />
			<set-variable variableName="comments"
				value="#[payload.get(0)['comments']]" doc:name="Variable" />
			<set-variable variableName="likes" value="#[payload.get(0)['likes']]"
				doc:name="Variable" />
			<set-variable variableName="isLike" value="#[payload.get(0)['isLike']]"
				doc:name="Variable" />
			<set-variable variableName="isComment"
				value="#[payload.get(0)['isComment']]" doc:name="Variable" />
			<set-variable variableName="isMe" value="#[payload.get(0)['isMe']]"
				doc:name="Variable" />

			<choice>
				<when expression="#[flowVars['isAdmin'] == 1]">
					<set-variable value="yes" variableName="isadmin" />
				</when>
				<otherwise>
					<set-variable value="no" variableName="isadmin" />
				</otherwise>
			</choice>

			<choice>
				<when expression="#[flowVars['isLike'] == 1]">
					<set-variable value="yes" variableName="islike" />
				</when>
				<otherwise>
					<set-variable value="no" variableName="islike" />
				</otherwise>
			</choice>

			<choice>
				<when expression="#[flowVars['isComment'] == 1]">
					<set-variable value="yes" variableName="iscomment" />
				</when>
				<otherwise>
					<set-variable value="no" variableName="iscomment" />
				</otherwise>
			</choice>

			<choice>
				<when expression="#[flowVars['isMe'] == 1]">
					<set-variable value="yes" variableName="isme" />
				</when>
				<otherwise>
					<set-variable value="no" variableName="isme" />
				</otherwise>
			</choice>

			<expression-transformer expression="#[trxPayload['id']=flowVars.id;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['communityID']=flowVars.communityID;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['communityName']=flowVars.communityName;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['description']=flowVars.description;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['location']=flowVars.location;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['comments']=flowVars.comments;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['isLike']=flowVars.islike;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['isComment']=flowVars.iscomment;trxPayload]"
				doc:name="Expression" />
			
			<expression-transformer
				expression="#[trxPayload['isAdmin']=flowVars.isadmin;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['isMe']=flowVars.isme;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['createdDate']=flowVars.createdDate;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['likes']=flowVars.likes;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['file']=flowVars.filePic;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['profilePicture']=flowVars.profPic;trxPayload]"
				doc:name="Expression" />

			<expression-component doc:name="Expression">
				<![CDATA[trxMaps.add(trxPayload);]]>
			</expression-component>
		</foreach>

		<expression-component doc:name="Expression">
			<![CDATA[
				responseMap=new java.util.HashMap();
				responseMap['msisdn']=originalPayload['msisdn'];
				responseMap['timelines']=flowVars['trxMaps'];
				responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
			payload = responseMap;]]>
		</expression-component>
	</flow>
</mule>
