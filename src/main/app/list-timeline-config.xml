<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="timelineListBPFlow">
		<set-payload value="#[flowVars['originalPayload']]"
			doc:name="Set Payload" />

		<choice>
			<when>
			<or-filter>
				<expression-filter expression="#[originalPayload['communityID'] == null]"/>
				<expression-filter expression="#[originalPayload['communityID'] == '']"/>
			</or-filter>
				<processor-chain>
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query>
			            	<![CDATA[SELECT t.id 
								FROM (
								    SELECT id, created_date
										FROM felo.timelines 
								    WHERE community_id IN (SELECT community_id FROM felo.member_community
										WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND approved='0')
								) t
								ORDER BY t.created_date DESC
								LIMIT #[Integer.parseInt(originalPayload['currentPage'])], #[Integer.parseInt(originalPayload['pageSize'])]]]>
						</db:parameterized-query>
					</db:select>
				</processor-chain>
			</when>
			<otherwise>
				<processor-chain>
					<set-variable value="#[originalPayload['communityID']]"
						variableName="communityID" />
					<db:select config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query>
						   <![CDATA[SELECT id 
							   		FROM felo.timelines WHERE community_id=#[flowVars['communityID']]
						   		ORDER BY created_date DESC
							   	LIMIT #[Integer.parseInt(originalPayload['currentPage'])], #[Integer.parseInt(originalPayload['pageSize'])]]]>
						</db:parameterized-query>
					</db:select>
				</processor-chain>
			</otherwise>
		</choice>

		<logger level="INFO" message="TIMELINE ID = #[payload]"
			doc:name="Logger" />
		<message-filter onUnaccepted="dataNotFoundFlow"
			doc:name="Message">
			<expression-filter expression="#[payload != []]" />
		</message-filter>

		<set-variable variableName="trxMaps" value="#[new java.util.ArrayList()]"
			doc:name="Variable" />

		<foreach collection="#[payload]" doc:name="For Each">
			<set-variable variableName="trxPayload" value="#[new java.util.HashMap()]"
				doc:name="Variable" />

			<set-variable variableName="id" value="#[payload.'id']"
				doc:name="Variable" />

			<db:select config-ref="MySQL_Configuration" doc:name="Database">
				<db:parameterized-query>
					   <![CDATA[SELECT t.id,t.community_id as communityID,c.name as communityName,t.description,t.file, t.created_date, t.location, t.file_blur,
	            			(SELECT COUNT(*) FROM felo.comments WHERE timeline_id=#[flowVars['id']]) as comments,
				            (SELECT COUNT(*) FROM felo.likes WHERE timeline_id=#[flowVars['id']]) as likes,
				            (SELECT EXISTS (SELECT 1/0 FROM felo.likes WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND timeline_id=#[flowVars['id']])) as isLike,
				           	(SELECT EXISTS (SELECT 1/0 FROM felo.comments WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND timeline_id=#[flowVars['id']])) as isComment,
				           	(SELECT EXISTS (SELECT 1/0 FROM felo.timelines WHERE member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']]) AND id=#[flowVars['id']])) as isMe,
				           	(SELECT name FROM felo.members WHERE id=(SELECT member_id from felo.timelines WHERE id=#[flowVars['id']])) as shareName,
				           	(SELECT profile_picture FROM felo.members WHERE id=(SELECT member_id from felo.timelines WHERE id=#[flowVars['id']])) as profile_picture
	            		FROM felo.timelines t 
	            			INNER JOIN felo.communities c ON  t.community_id=c.id 
	            			INNER JOIN felo.members m ON t.member_id=m.id 
	            		WHERE t.id=#[flowVars['id']] AND t.display='1']]>
				</db:parameterized-query>
			</db:select>

			<logger level="INFO" message="TIMELINE LIST = #[payload]"
				doc:name="Logger" />
			<message-filter onUnaccepted="dataNotFoundFlow"
				doc:name="Message">
				<expression-filter expression="#[payload != []]" />
			</message-filter>
			<set-variable variableName="createdDate"
				value="#[org.felo.api.process.Utils.formatDate(payload.get(0)['created_date'])]"
				doc:name="Variable" />
			<set-variable variableName="communityID"
				value="#[payload.get(0)['communityID']]" doc:name="Variable" />
			<set-variable variableName="communityName"
				value="#[payload.get(0)['communityName']]" doc:name="Variable" />
			<set-variable variableName="description"
				value="#[payload.get(0)['description']]" doc:name="Variable" />
			<set-variable variableName="location"
				value="#[payload.get(0)['location']]" doc:name="Variable" />
			<set-variable variableName="shareName"
				value="#[payload.get(0)['shareName']]" doc:name="Variable" />
			<set-variable variableName="filePic" value="#[payload.get(0)['file']]"
				doc:name="Variable" />
			<set-variable variableName="profPic"
				value="#[payload.get(0)['profile_picture']]" doc:name="Variable" />
			<set-variable variableName="comments"
				value="#[payload.get(0)['comments']]" doc:name="Variable" />
			<set-variable variableName="likes" value="#[payload.get(0)['likes']]"
				doc:name="Variable" />
			<set-variable variableName="isLike" value="#[payload.get(0)['isLike']]"
				doc:name="Variable" />
			<set-variable variableName="isComment"
				value="#[payload.get(0)['isComment']]" doc:name="Variable" />
			<set-variable variableName="isMe" value="#[payload.get(0)['isMe']]"
				doc:name="Variable" />
			<set-variable variableName="fileBlur"
				value="#[payload.get(0)['file_blur']]" doc:name="Variable" />

			<db:select config-ref="MySQL_Configuration" doc:name="Database">
				<db:parameterized-query>
			          <![CDATA[SELECT admin as isAdmin
										FROM felo.member_community 
											WHERE community_id=(#[flowVars['communityID']])
												AND member_id=(SELECT id FROM felo.members WHERE msisdn=#[originalPayload['msisdn']])]]>
						</db:parameterized-query>
			</db:select>
			<logger level="INFO" message="IS ADMIN: #[payload]"/>

			<choice>
				<when expression="#[payload == []]">
					<set-variable value="no" variableName="isadmin" />
				</when>
				<otherwise>
					<logger level="INFO" message="IS ADMIN: #[payload.get(0)['isAdmin']]"/>
					<choice>
						<when expression="#[payload.get(0)['isAdmin'] == 1]">
							<set-variable value="yes" variableName="isadmin" />
						</when>
						<otherwise>
							<set-variable value="no" variableName="isadmin" />
						</otherwise>
					</choice>
				</otherwise>
			</choice>

			<choice>
				<when expression="#[flowVars['isLike'] == 1]">
					<set-variable value="yes" variableName="islike" />
				</when>
				<otherwise>
					<set-variable value="no" variableName="islike" />
				</otherwise>
			</choice>

			<choice>
				<when expression="#[flowVars['isComment'] == 1]">
					<set-variable value="yes" variableName="iscomment" />
				</when>
				<otherwise>
					<set-variable value="no" variableName="iscomment" />
				</otherwise>
			</choice>

			<choice>
				<when expression="#[flowVars['isMe'] == 1]">
					<set-variable value="yes" variableName="isme" />
				</when>
				<otherwise>
					<set-variable value="no" variableName="isme" />
				</otherwise>
			</choice>

			<choice>
				<when expression="#[flowVars['fileBlur'] == null]">
					<set-variable variableName="fileOri"
						value="${file.base.path}timeline/#[flowVars['id']]-timeline-1.#[org.apache.commons.lang.StringUtils.substringAfter(flowVars['filePic'],'.')]"
						doc:name="Variable" />
					<set-variable variableName="fileBlur"
						value="${file.base.path}timeline/#[flowVars['id']]-timeline-2.#[org.apache.commons.lang.StringUtils.substringAfter(flowVars['filePic'],'.')]"
						doc:name="Variable" />
					<expression-component doc:name="Expression">
						<![CDATA[regMap=new java.util.HashMap();
							regMap['fileOri']=flowVars['fileOri'];
							regMap['fileBlur']=flowVars['fileBlur'];
						payload = regMap;]]>
					</expression-component>
					<pooled-component>
						<spring-object bean="ImageConverter" />
					</pooled-component>
					<set-variable
						value="${url.file}timeline/#[flowVars['id']]-timeline-2.#[org.apache.commons.lang.StringUtils.substringAfter(flowVars['filePic'],'.')]"
						variableName="fileBlur" doc:name="Variable" />
					<db:update config-ref="MySQL_Configuration" doc:name="Database">
						<db:parameterized-query>
		            	<![CDATA[UPDATE felo.timelines SET file_blur=#[flowVars['fileBlur']] 
		            				WHERE id=#[flowVars['id']]]]>
					</db:parameterized-query>
					</db:update>
					<message-filter onUnaccepted="dbFailedFlow"
						doc:name="Message">
						<expression-filter expression="#[payload == 1]" />
					</message-filter>
				</when>
				<otherwise>
					<logger level="INFO" message="BLUR FILE= #[flowVars['fileBlur']]" />
				</otherwise>
			</choice>

			<expression-transformer expression="#[trxPayload['id']=flowVars.id;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['communityID']=flowVars.communityID;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['communityName']=flowVars.communityName;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['description']=flowVars.description;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['location']=flowVars.location;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['shareName']=flowVars.shareName;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['comments']=flowVars.comments;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['isLike']=flowVars.islike;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['isComment']=flowVars.iscomment;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['isAdmin']=flowVars.isadmin;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['isMe']=flowVars.isme;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['createdDate']=flowVars.createdDate;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['likes']=flowVars.likes;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['fileOriginal']=flowVars.filePic;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['fileBlur']=flowVars.fileBlur;trxPayload]"
				doc:name="Expression" />

			<expression-transformer
				expression="#[trxPayload['profilePicture']=flowVars.profPic;trxPayload]"
				doc:name="Expression" />

			<expression-component doc:name="Expression">
				<![CDATA[trxMaps.add(trxPayload);]]>
			</expression-component>
		</foreach>

		<expression-component doc:name="Expression">
			<![CDATA[
				responseMap=new java.util.HashMap();
				responseMap['msisdn']=originalPayload['msisdn'];
				responseMap['timelines']=flowVars['trxMaps'];
				responseMap['status']= org.felo.api.data.StatusBuilder.getStatus('PROCESSED');			
			payload = responseMap;]]>
		</expression-component>
	</flow>
</mule>
